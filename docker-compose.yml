
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elasticsearch/elasticsearch.key
      - xpack.security.http.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/elasticsearch/elasticsearch.key
      - xpack.security.transport.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
      - xpack.security.authc.token.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.security.enrollment.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs:ro
      - esdata:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml 
    ports:
      - ${ES_PORT}:9200
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"]
      interval: 10s
      timeout: 10s
      retries: 120
  

  token-generator:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: token
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./generate-token.sh:/generate-token.sh
      - ./tokens:/usr/tokens
      - ./certs/ca/ca.crt:/usr/share/elasticsearch/config/certs/ca.crt:ro
      - ./certs/elasticsearch/elasticsearch.crt:/usr/share/elasticsearch/config/certs/elasticsearch.crt:ro
      - ./certs/elasticsearch/elasticsearch.key:/usr/share/elasticsearch/config/certs/elasticsearch.key:ro
    command: ["/bin/bash", "/generate-token.sh"]
    networks:
      - elk
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTIC_PASSWORD=changeme
     # - KIBANA_TOKEN=${KIBANA_TOKEN}

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy    
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_TOKEN=${KIBANA_TOKEN}
      - KIBANA_ENCRYPTION_KEY=${KIBANA_ENCRYPTION_KEY}
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN_FILE=/usr/tokens/kibana-token.txt
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certs/ca/ca.crt
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/kibana/kibana.crt
      - SERVER_SSL_KEY=/usr/share/kibana/config/certs/kibana/kibana.key
      - SERVER_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certs/ca/ca.crt
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5601
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${KIBANA_ENCRYPTION_KEY}
      - XPACK_REPORTING_ENCRYPTIONKEY=${KIBANA_ENCRYPTION_KEY}
      - XPACK_SECURITY_ENCRYPTIONKEY=${KIBANA_ENCRYPTION_KEY}
      - LOGGING_ROOT_LEVEL=debug
    volumes:
      - ./tokens:/usr/tokens:ro
      - ./certs:/usr/share/kibana/config/certs:ro
      - kibanadata:/usr/share/kibana/data
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml 
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I -k https://localhost:5601/api/status | grep -q '200 OK'"]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - NODE_NAME=logstash
      - XPACK_MONITORING_ENABLED=false
      - PIPELINE_WORKERS=1
      - PIPELINE_BATCH_SIZE=125
      - PIPELINE_BATCH_DELAY=50
      - LS_JAVA_OPTS=-Xmx1g -Xms1g
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
    volumes:
      - ./certs:/usr/share/logstash/config/certs:ro
      - ./pipeline:/usr/share/logstash/pipeline:ro
      - logstashdata:/usr/share/logstash/data
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f http://localhost:9600/_node/stats || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  esdata:
    driver: local
  kibanadata:
    driver: local
  logstashdata:
    driver: local

networks:
  elk:
    driver: bridge
